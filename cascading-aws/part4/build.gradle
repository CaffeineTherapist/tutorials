task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'provided-base'
apply plugin: 'fatjar'

version = '1.0'

ext.cascadingVersion = '2.7.0'
ext.hadoop2Version = '2.6.0'
ext.uaParserVersion = '1.3.1'
ext.cascadingConnectorVersion = '2.3.0'
ext.snakeYamlVersion = '1.15'
ext.redshiftVersion = '3.0.0'

buildscript {
  repositories {
    jcenter()
    mavenLocal()
    maven { url 'http://repo.spring.io/plugins-release' }
  }
  dependencies {
    classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:2.2.1'
    classpath 'eu.appsatori:gradle-fatjar-plugin:0.2-rc1'
  }
}


repositories {
    mavenLocal()
    mavenCentral()
    maven{ url 'http://conjars.org/repo/' }
}

dependencies {
    compile( group: 'cascading', name: 'cascading-core', version: cascadingVersion )
    compile( group: 'cascading', name: 'cascading-local', version: cascadingVersion )
    compile( group: 'cascading', name: 'cascading-hadoop2-mr1', version: cascadingVersion )
    compile( group: 'cascading', name: 'cascading-jdbc-redshift', version: redshiftVersion )
    compile( group: 'aws.kinesis', name: 'cascading-connector', version: cascadingConnectorVersion )

    provided( group: 'org.apache.hadoop', name: 'hadoop-common', version: hadoop2Version )
    provided( group: 'org.apache.hadoop', name: 'hadoop-client', version: hadoop2Version )
    provided ( group: 'org.slf4j', name: 'slf4j-api', version: '1.6.1' )

    testCompile( group: 'cascading', name: 'cascading-core', version: cascadingVersion, classifier: 'tests' )
    testCompile( group: 'cascading', name: 'cascading-hadoop2-mr1', version: cascadingVersion, classifier: 'tests' )
    testCompile( group: 'cascading', name: 'cascading-platform', version: cascadingVersion, classifier: 'tests' )
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

fatJar {
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/LICENSE*'

    doFirst {
      into( 'lib' ) {
        from { configurations.compile.minus( [configurations.provided] ) }
      }
    }

    manifest {
        attributes "Main-Class": "cascading/kinesis/sample/KinesisLogProcessingApp"
    }
}