package cascading.legstar.cobolcopybook.beans.kcp01v05.bind;

import java.math.BigDecimal;
import java.util.List;

import cascading.legstar.cobolcopybook.beans.kcp01v05.Kcp01V05BankAccountData;
import cascading.legstar.cobolcopybook.beans.kcp01v05.Kcp01V05NationalInsuranNo1;
import cascading.legstar.cobolcopybook.beans.kcp01v05.Kcp01V05NationalInsuranNo2;
import cascading.legstar.cobolcopybook.beans.kcp01v05.ObjectFactory;
import com.legstar.coxb.CobolBindingFactory;
import com.legstar.coxb.ICobolArrayStringBinding;
import com.legstar.coxb.ICobolBinding;
import com.legstar.coxb.ICobolBindingFactory;
import com.legstar.coxb.ICobolComplexBinding;
import com.legstar.coxb.ICobolPackedDecimalBinding;
import com.legstar.coxb.ICobolStringBinding;
import com.legstar.coxb.common.CComplexBinding;
import com.legstar.coxb.host.HostException;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/**
 * LegStar Binding for Complex element :
 * Kcp01V05BankAccountData.
 * <p/>
 * This class was generated by LegStar Binding generator.
 */
public class Kcp01V05BankAccountDataBinding
  extends CComplexBinding
  {

  /** Maximum host bytes size for this complex object. */
  private static final int BYTE_LENGTH = 214;
  /** Binding factory. */
  private static final ICobolBindingFactory BF
    = CobolBindingFactory.getBindingFactory();
  /** Static reference to Value object factory to be used as default. */
  private static final ObjectFactory JF = new ObjectFactory();
  /**
   * Current Value object factory (Defaults to the static one but can be
   * changed).
   */
  private ObjectFactory mValueObjectFactory = JF;
  /** Logger. */
  private final Log _log = LogFactory.getLog( getClass() );
  /** Child bound to value object property Kcp01V05Sname(String). */
  public ICobolStringBinding _kcp01V05Sname;
  /** Child bound to value object property Kcp01V05Busclass(Short). */
  public ICobolPackedDecimalBinding _kcp01V05Busclass;
  /** Child bound to value object property Kcp01V05Satind(Short). */
  public ICobolPackedDecimalBinding _kcp01V05Satind;
  /** Child bound to value object property Kcp01V05ProductId(Integer). */
  public ICobolPackedDecimalBinding _kcp01V05ProductId;
  /** Child bound to value object property Kcp01V05Genname(String). */
  public ICobolStringBinding _kcp01V05Genname;
  /** Child bound to value object property Kcp01V05Actname(String). */
  public ICobolStringBinding _kcp01V05Actname;
  /** Child bound to value object property Kcp01V05Chtname(String). */
  public ICobolStringBinding _kcp01V05Chtname;
  /** Child bound to value object property Kcp01V05SnameCode(String). */
  public ICobolStringBinding _kcp01V05SnameCode;
  /** Child bound to value object property Kcp01V05CorpDiv(Short). */
  public ICobolPackedDecimalBinding _kcp01V05CorpDiv;
  /** Child bound to value object property Kcp01V05ApplicationScore(String). */
  public ICobolStringBinding _kcp01V05ApplicationScore;
  /** Child bound to value object property Kcp01V05InsOnDate(String). */
  public ICobolStringBinding _kcp01V05InsOnDate;
  /** Child bound to value object property Kcp01V05InsChgDate(String). */
  public ICobolStringBinding _kcp01V05InsChgDate;
  /** Child bound to value object property Kcp01V05FxdTermStartDate(String). */
  public ICobolStringBinding _kcp01V05FxdTermStartDate;
  /** Child bound to value object property Kcp01V05FxdTermEndDate(String). */
  public ICobolStringBinding _kcp01V05FxdTermEndDate;
  /** Child bound to value object property Kcp01V05StudOff(String). */
  public ICobolStringBinding _kcp01V05StudOff;
  /** Child bound to value object property Kcp01V05BcrNpfInd(Short). */
  public ICobolPackedDecimalBinding _kcp01V05BcrNpfInd;
  /** Child bound to value object property Kcp01V05AlwaysRep(Short). */
  public ICobolPackedDecimalBinding _kcp01V05AlwaysRep;
  /** Child bound to value object property Kcp01V05ActualRenDate(String). */
  public ICobolStringBinding _kcp01V05ActualRenDate;
  /** Child bound to value object property Kcp01V05RenewDate(String). */
  public ICobolStringBinding _kcp01V05RenewDate;
  /** Child bound to value object property Kcp01V05Excess(Short). */
  public ICobolPackedDecimalBinding _kcp01V05Excess;
  /** Child bound to value object property Kcp01V05MthlyDaysExcess(Short). */
  public ICobolPackedDecimalBinding _kcp01V05MthlyDaysExcess;
  /** Child bound to value object property Filler42(String). */
  public ICobolArrayStringBinding _filler42;
  /** Child bound to value object property Kcp01V05SameDayEnt(Long). */
  public ICobolPackedDecimalBinding _kcp01V05SameDayEnt;
  /** Child bound to value object property Kcp01V05LstDrDate(String). */
  public ICobolStringBinding _kcp01V05LstDrDate;
  /** Child bound to value object property Kcp01V05LstCrDate(String). */
  public ICobolStringBinding _kcp01V05LstCrDate;
  /** Child bound to value object property Kcp01V05StatsToGrp(Short). */
  public ICobolPackedDecimalBinding _kcp01V05StatsToGrp;
  /** Child bound to value object property Kcp01V05BicIndclass(Integer). */
  public ICobolPackedDecimalBinding _kcp01V05BicIndclass;
  /** Child bound to value object property Kcp01V05StaffNumber(Integer). */
  public ICobolPackedDecimalBinding _kcp01V05StaffNumber;
  /** Child bound to value object property Kcp01V05FirstCrIntDate(String). */
  public ICobolStringBinding _kcp01V05FirstCrIntDate;
  /** Child bound to value object property Kcp01V05LastConsDate(String). */
  public ICobolStringBinding _kcp01V05LastConsDate;
  /** Child bound to value object property Kcp01V05BranchShortName(String). */
  public ICobolStringBinding _kcp01V05BranchShortName;
  /** Child bound to value object property Kcp01V05Birthdate(String). */
  public ICobolStringBinding _kcp01V05Birthdate;
  /** Child bound to value object property Kcp01V05Birthdate2(String). */
  public ICobolStringBinding _kcp01V05Birthdate2;
  /** Child bound to value object property Kcp01V05NationalInsuranNo1(Kcp01V05NationalInsuranNo1). */
  public ICobolComplexBinding _kcp01V05NationalInsuranNo1;
  /** Child bound to value object property Kcp01V05NationalInsuranNo2(Kcp01V05NationalInsuranNo2). */
  public ICobolComplexBinding _kcp01V05NationalInsuranNo2;
  /** Child bound to value object property Kcp01V05CloseAccountBal(BigDecimal). */
  public ICobolPackedDecimalBinding _kcp01V05CloseAccountBal;
  /** Child bound to value object property Kcp01V05ExpManInd(Short). */
  public ICobolPackedDecimalBinding _kcp01V05ExpManInd;
  /** Child bound to value object property Kcp01V05SensAccInd(String). */
  public ICobolStringBinding _kcp01V05SensAccInd;
  /** Child bound to value object property Kcp01V05ChosenName(String). */
  public ICobolStringBinding _kcp01V05ChosenName;
  /** Child bound to value object property Kcp01V05PooledOffsetInd(String). */
  public ICobolStringBinding _kcp01V05PooledOffsetInd;
  /** Child bound to value object property Kcp01V05PooledBal(BigDecimal). */
  public ICobolPackedDecimalBinding _kcp01V05PooledBal;
  /** Value object to which this cobol complex element is bound. */
  private Kcp01V05BankAccountData mValueObject;
  /**
   * Indicates that the associated Value object just came from the constructor
   * and doesn't need to be recreated.
   */
  private boolean mUnusedValueObject = false;

  /**
   * Constructor for a root Complex element without a bound Value object.
   */
  public Kcp01V05BankAccountDataBinding()
    {
    this( null );
    }

  /**
   * Constructor for a root Complex element with a bound Value object.
   *
   * @param valueObject the concrete Value object instance bound to this
   *                    complex element
   */
  public Kcp01V05BankAccountDataBinding(
    final Kcp01V05BankAccountData valueObject )
    {
    this( "", "", null, valueObject );
    }

  /**
   * Constructor for a Complex element as a child of another element and
   * an associated Value object.
   *
   * @param bindingName   the identifier for this binding
   * @param fieldName     field name in parent Value object
   * @param valueObject   the concrete Value object instance bound to this
   *                      complex element
   * @param parentBinding a reference to the parent binding
   */
  public Kcp01V05BankAccountDataBinding(
    final String bindingName,
    final String fieldName,
    final ICobolComplexBinding parentBinding,
    final Kcp01V05BankAccountData valueObject )
    {

    super( bindingName, fieldName, Kcp01V05BankAccountData.class, null, parentBinding );
    mValueObject = valueObject;
    if( mValueObject != null )
      {
      mUnusedValueObject = true;
      }
    initChildren();
    setByteLength( BYTE_LENGTH );
    }

  /** Creates a binding property for each child. */
  private void initChildren()
    {
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Initializing started" );
      }
        /* Create binding children instances */

    _kcp01V05Sname = BF.createStringBinding( "Kcp01V05Sname",
      "Kcp01V05Sname", String.class, this );
    _kcp01V05Sname.setCobolName( "KCP01V05-SNAME" );
    _kcp01V05Sname.setByteLength( 20 );
    _kcp01V05Busclass = BF.createPackedDecimalBinding( "Kcp01V05Busclass",
      "Kcp01V05Busclass", Short.class, this );
    _kcp01V05Busclass.setCobolName( "KCP01V05-BUSCLASS" );
    _kcp01V05Busclass.setByteLength( 2 );
    _kcp01V05Busclass.setTotalDigits( 3 );
    _kcp01V05Busclass.setIsSigned( true );
    _kcp01V05Satind = BF.createPackedDecimalBinding( "Kcp01V05Satind",
      "Kcp01V05Satind", Short.class, this );
    _kcp01V05Satind.setCobolName( "KCP01V05-SATIND" );
    _kcp01V05Satind.setByteLength( 2 );
    _kcp01V05Satind.setTotalDigits( 3 );
    _kcp01V05Satind.setIsSigned( true );
    _kcp01V05ProductId = BF.createPackedDecimalBinding( "Kcp01V05ProductId",
      "Kcp01V05ProductId", Integer.class, this );
    _kcp01V05ProductId.setCobolName( "KCP01V05-PRODUCT-ID" );
    _kcp01V05ProductId.setByteLength( 3 );
    _kcp01V05ProductId.setTotalDigits( 5 );
    _kcp01V05ProductId.setIsSigned( true );
    _kcp01V05Genname = BF.createStringBinding( "Kcp01V05Genname",
      "Kcp01V05Genname", String.class, this );
    _kcp01V05Genname.setCobolName( "KCP01V05-GENNAME" );
    _kcp01V05Genname.setByteLength( 20 );
    _kcp01V05Actname = BF.createStringBinding( "Kcp01V05Actname",
      "Kcp01V05Actname", String.class, this );
    _kcp01V05Actname.setCobolName( "KCP01V05-ACTNAME" );
    _kcp01V05Actname.setByteLength( 15 );
    _kcp01V05Chtname = BF.createStringBinding( "Kcp01V05Chtname",
      "Kcp01V05Chtname", String.class, this );
    _kcp01V05Chtname.setCobolName( "KCP01V05-CHTNAME" );
    _kcp01V05Chtname.setByteLength( 15 );
    _kcp01V05SnameCode = BF.createStringBinding( "Kcp01V05SnameCode",
      "Kcp01V05SnameCode", String.class, this );
    _kcp01V05SnameCode.setCobolName( "KCP01V05-SNAME-CODE" );
    _kcp01V05SnameCode.setByteLength( 4 );
    _kcp01V05CorpDiv = BF.createPackedDecimalBinding( "Kcp01V05CorpDiv",
      "Kcp01V05CorpDiv", Short.class, this );
    _kcp01V05CorpDiv.setCobolName( "KCP01V05-CORP-DIV" );
    _kcp01V05CorpDiv.setByteLength( 2 );
    _kcp01V05CorpDiv.setTotalDigits( 3 );
    _kcp01V05CorpDiv.setIsSigned( true );
    _kcp01V05ApplicationScore = BF.createStringBinding( "Kcp01V05ApplicationScore",
      "Kcp01V05ApplicationScore", String.class, this );
    _kcp01V05ApplicationScore.setCobolName( "KCP01V05-APPLICATION-SCORE" );
    _kcp01V05ApplicationScore.setByteLength( 11 );
    _kcp01V05InsOnDate = BF.createStringBinding( "Kcp01V05InsOnDate",
      "Kcp01V05InsOnDate", String.class, this );
    _kcp01V05InsOnDate.setCobolName( "KCP01V05-INS-ON-DATE" );
    _kcp01V05InsOnDate.setByteLength( 2 );
    _kcp01V05InsChgDate = BF.createStringBinding( "Kcp01V05InsChgDate",
      "Kcp01V05InsChgDate", String.class, this );
    _kcp01V05InsChgDate.setCobolName( "KCP01V05-INS-CHG-DATE" );
    _kcp01V05InsChgDate.setByteLength( 2 );
    _kcp01V05FxdTermStartDate = BF.createStringBinding( "Kcp01V05FxdTermStartDate",
      "Kcp01V05FxdTermStartDate", String.class, this );
    _kcp01V05FxdTermStartDate.setCobolName( "KCP01V05-FXD-TERM-START-DATE" );
    _kcp01V05FxdTermStartDate.setByteLength( 2 );
    _kcp01V05FxdTermEndDate = BF.createStringBinding( "Kcp01V05FxdTermEndDate",
      "Kcp01V05FxdTermEndDate", String.class, this );
    _kcp01V05FxdTermEndDate.setCobolName( "KCP01V05-FXD-TERM-END-DATE" );
    _kcp01V05FxdTermEndDate.setByteLength( 2 );
    _kcp01V05StudOff = BF.createStringBinding( "Kcp01V05StudOff",
      "Kcp01V05StudOff", String.class, this );
    _kcp01V05StudOff.setCobolName( "KCP01V05-STUD-OFF" );
    _kcp01V05StudOff.setByteLength( 2 );
    _kcp01V05BcrNpfInd = BF.createPackedDecimalBinding( "Kcp01V05BcrNpfInd",
      "Kcp01V05BcrNpfInd", Short.class, this );
    _kcp01V05BcrNpfInd.setCobolName( "KCP01V05-BCR-NPF-IND" );
    _kcp01V05BcrNpfInd.setByteLength( 1 );
    _kcp01V05BcrNpfInd.setTotalDigits( 1 );
    _kcp01V05BcrNpfInd.setIsSigned( true );
    _kcp01V05AlwaysRep = BF.createPackedDecimalBinding( "Kcp01V05AlwaysRep",
      "Kcp01V05AlwaysRep", Short.class, this );
    _kcp01V05AlwaysRep.setCobolName( "KCP01V05-ALWAYS-REP" );
    _kcp01V05AlwaysRep.setByteLength( 1 );
    _kcp01V05AlwaysRep.setTotalDigits( 1 );
    _kcp01V05AlwaysRep.setIsSigned( true );
    _kcp01V05ActualRenDate = BF.createStringBinding( "Kcp01V05ActualRenDate",
      "Kcp01V05ActualRenDate", String.class, this );
    _kcp01V05ActualRenDate.setCobolName( "KCP01V05-ACTUAL-REN-DATE" );
    _kcp01V05ActualRenDate.setByteLength( 2 );
    _kcp01V05RenewDate = BF.createStringBinding( "Kcp01V05RenewDate",
      "Kcp01V05RenewDate", String.class, this );
    _kcp01V05RenewDate.setCobolName( "KCP01V05-RENEW-DATE" );
    _kcp01V05RenewDate.setByteLength( 2 );
    _kcp01V05Excess = BF.createPackedDecimalBinding( "Kcp01V05Excess",
      "Kcp01V05Excess", Short.class, this );
    _kcp01V05Excess.setCobolName( "KCP01V05-EXCESS" );
    _kcp01V05Excess.setByteLength( 2 );
    _kcp01V05Excess.setTotalDigits( 3 );
    _kcp01V05Excess.setIsSigned( true );
    _kcp01V05MthlyDaysExcess = BF.createPackedDecimalBinding( "Kcp01V05MthlyDaysExcess",
      "Kcp01V05MthlyDaysExcess", Short.class, this );
    _kcp01V05MthlyDaysExcess.setCobolName( "KCP01V05-MTHLY-DAYS-EXCESS" );
    _kcp01V05MthlyDaysExcess.setByteLength( 2 );
    _kcp01V05MthlyDaysExcess.setTotalDigits( 3 );
    _kcp01V05MthlyDaysExcess.setIsSigned( true );
    _filler42 = BF.createArrayStringBinding( "Filler42",
      "Filler42", String.class, this );
    _filler42.setCobolName( "FILLER" );
    _filler42.setByteLength( 2 );
    _filler42.setItemByteLength( 1 );
    _filler42.setMinOccurs( 2 );
    _filler42.setMaxOccurs( 2 );
    _kcp01V05SameDayEnt = BF.createPackedDecimalBinding( "Kcp01V05SameDayEnt",
      "Kcp01V05SameDayEnt", Long.class, this );
    _kcp01V05SameDayEnt.setCobolName( "KCP01V05-SAME-DAY-ENT" );
    _kcp01V05SameDayEnt.setByteLength( 6 );
    _kcp01V05SameDayEnt.setTotalDigits( 11 );
    _kcp01V05SameDayEnt.setIsSigned( true );
    _kcp01V05LstDrDate = BF.createStringBinding( "Kcp01V05LstDrDate",
      "Kcp01V05LstDrDate", String.class, this );
    _kcp01V05LstDrDate.setCobolName( "KCP01V05-LST-DR-DATE" );
    _kcp01V05LstDrDate.setByteLength( 2 );
    _kcp01V05LstCrDate = BF.createStringBinding( "Kcp01V05LstCrDate",
      "Kcp01V05LstCrDate", String.class, this );
    _kcp01V05LstCrDate.setCobolName( "KCP01V05-LST-CR-DATE" );
    _kcp01V05LstCrDate.setByteLength( 2 );
    _kcp01V05StatsToGrp = BF.createPackedDecimalBinding( "Kcp01V05StatsToGrp",
      "Kcp01V05StatsToGrp", Short.class, this );
    _kcp01V05StatsToGrp.setCobolName( "KCP01V05-STATS-TO-GRP" );
    _kcp01V05StatsToGrp.setByteLength( 1 );
    _kcp01V05StatsToGrp.setTotalDigits( 1 );
    _kcp01V05StatsToGrp.setIsSigned( true );
    _kcp01V05BicIndclass = BF.createPackedDecimalBinding( "Kcp01V05BicIndclass",
      "Kcp01V05BicIndclass", Integer.class, this );
    _kcp01V05BicIndclass.setCobolName( "KCP01V05-BIC-INDCLASS" );
    _kcp01V05BicIndclass.setByteLength( 3 );
    _kcp01V05BicIndclass.setTotalDigits( 5 );
    _kcp01V05BicIndclass.setIsSigned( true );
    _kcp01V05StaffNumber = BF.createPackedDecimalBinding( "Kcp01V05StaffNumber",
      "Kcp01V05StaffNumber", Integer.class, this );
    _kcp01V05StaffNumber.setCobolName( "KCP01V05-STAFF-NUMBER" );
    _kcp01V05StaffNumber.setByteLength( 4 );
    _kcp01V05StaffNumber.setTotalDigits( 7 );
    _kcp01V05StaffNumber.setIsSigned( true );
    _kcp01V05FirstCrIntDate = BF.createStringBinding( "Kcp01V05FirstCrIntDate",
      "Kcp01V05FirstCrIntDate", String.class, this );
    _kcp01V05FirstCrIntDate.setCobolName( "KCP01V05-FIRST-CR-INT-DATE" );
    _kcp01V05FirstCrIntDate.setByteLength( 2 );
    _kcp01V05LastConsDate = BF.createStringBinding( "Kcp01V05LastConsDate",
      "Kcp01V05LastConsDate", String.class, this );
    _kcp01V05LastConsDate.setCobolName( "KCP01V05-LAST-CONS-DATE" );
    _kcp01V05LastConsDate.setByteLength( 2 );
    _kcp01V05BranchShortName = BF.createStringBinding( "Kcp01V05BranchShortName",
      "Kcp01V05BranchShortName", String.class, this );
    _kcp01V05BranchShortName.setCobolName( "KCP01V05-BRANCH-SHORT-NAME" );
    _kcp01V05BranchShortName.setByteLength( 16 );
    _kcp01V05Birthdate = BF.createStringBinding( "Kcp01V05Birthdate",
      "Kcp01V05Birthdate", String.class, this );
    _kcp01V05Birthdate.setCobolName( "KCP01V05-BIRTHDATE" );
    _kcp01V05Birthdate.setByteLength( 2 );
    _kcp01V05Birthdate2 = BF.createStringBinding( "Kcp01V05Birthdate2",
      "Kcp01V05Birthdate2", String.class, this );
    _kcp01V05Birthdate2.setCobolName( "KCP01V05-BIRTHDATE-2" );
    _kcp01V05Birthdate2.setByteLength( 2 );
    _kcp01V05NationalInsuranNo1 = new Kcp01V05NationalInsuranNo1Binding( "Kcp01V05NationalInsuranNo1",
      "Kcp01V05NationalInsuranNo1", this, null );
    _kcp01V05NationalInsuranNo1.setCobolName( "KCP01V05-NATIONAL-INSURAN-NO-1" );
    _kcp01V05NationalInsuranNo1.setByteLength( 7 );
    _kcp01V05NationalInsuranNo2 = new Kcp01V05NationalInsuranNo2Binding( "Kcp01V05NationalInsuranNo2",
      "Kcp01V05NationalInsuranNo2", this, null );
    _kcp01V05NationalInsuranNo2.setCobolName( "KCP01V05-NATIONAL-INSURAN-NO-2" );
    _kcp01V05NationalInsuranNo2.setByteLength( 7 );
    _kcp01V05CloseAccountBal = BF.createPackedDecimalBinding( "Kcp01V05CloseAccountBal",
      "Kcp01V05CloseAccountBal", BigDecimal.class, this );
    _kcp01V05CloseAccountBal.setCobolName( "KCP01V05-CLOSE-ACCOUNT-BAL" );
    _kcp01V05CloseAccountBal.setByteLength( 7 );
    _kcp01V05CloseAccountBal.setTotalDigits( 13 );
    _kcp01V05CloseAccountBal.setFractionDigits( 2 );
    _kcp01V05CloseAccountBal.setIsSigned( true );
    _kcp01V05ExpManInd = BF.createPackedDecimalBinding( "Kcp01V05ExpManInd",
      "Kcp01V05ExpManInd", Short.class, this );
    _kcp01V05ExpManInd.setCobolName( "KCP01V05-EXP-MAN-IND" );
    _kcp01V05ExpManInd.setByteLength( 2 );
    _kcp01V05ExpManInd.setTotalDigits( 3 );
    _kcp01V05ExpManInd.setIsSigned( true );
    _kcp01V05SensAccInd = BF.createStringBinding( "Kcp01V05SensAccInd",
      "Kcp01V05SensAccInd", String.class, this );
    _kcp01V05SensAccInd.setCobolName( "KCP01V05-SENS-ACC-IND" );
    _kcp01V05SensAccInd.setByteLength( 1 );
    _kcp01V05ChosenName = BF.createStringBinding( "Kcp01V05ChosenName",
      "Kcp01V05ChosenName", String.class, this );
    _kcp01V05ChosenName.setCobolName( "KCP01V05-CHOSEN-NAME" );
    _kcp01V05ChosenName.setByteLength( 25 );
    _kcp01V05PooledOffsetInd = BF.createStringBinding( "Kcp01V05PooledOffsetInd",
      "Kcp01V05PooledOffsetInd", String.class, this );
    _kcp01V05PooledOffsetInd.setCobolName( "KCP01V05-POOLED-OFFSET-IND" );
    _kcp01V05PooledOffsetInd.setByteLength( 1 );
    _kcp01V05PooledBal = BF.createPackedDecimalBinding( "Kcp01V05PooledBal",
      "Kcp01V05PooledBal", BigDecimal.class, this );
    _kcp01V05PooledBal.setCobolName( "KCP01V05-POOLED-BAL" );
    _kcp01V05PooledBal.setByteLength( 6 );
    _kcp01V05PooledBal.setTotalDigits( 11 );
    _kcp01V05PooledBal.setFractionDigits( 2 );
    _kcp01V05PooledBal.setIsSigned( true );

        /* Add children to children list */
    getChildrenList().add( _kcp01V05Sname );
    getChildrenList().add( _kcp01V05Busclass );
    getChildrenList().add( _kcp01V05Satind );
    getChildrenList().add( _kcp01V05ProductId );
    getChildrenList().add( _kcp01V05Genname );
    getChildrenList().add( _kcp01V05Actname );
    getChildrenList().add( _kcp01V05Chtname );
    getChildrenList().add( _kcp01V05SnameCode );
    getChildrenList().add( _kcp01V05CorpDiv );
    getChildrenList().add( _kcp01V05ApplicationScore );
    getChildrenList().add( _kcp01V05InsOnDate );
    getChildrenList().add( _kcp01V05InsChgDate );
    getChildrenList().add( _kcp01V05FxdTermStartDate );
    getChildrenList().add( _kcp01V05FxdTermEndDate );
    getChildrenList().add( _kcp01V05StudOff );
    getChildrenList().add( _kcp01V05BcrNpfInd );
    getChildrenList().add( _kcp01V05AlwaysRep );
    getChildrenList().add( _kcp01V05ActualRenDate );
    getChildrenList().add( _kcp01V05RenewDate );
    getChildrenList().add( _kcp01V05Excess );
    getChildrenList().add( _kcp01V05MthlyDaysExcess );
    getChildrenList().add( _filler42 );
    getChildrenList().add( _kcp01V05SameDayEnt );
    getChildrenList().add( _kcp01V05LstDrDate );
    getChildrenList().add( _kcp01V05LstCrDate );
    getChildrenList().add( _kcp01V05StatsToGrp );
    getChildrenList().add( _kcp01V05BicIndclass );
    getChildrenList().add( _kcp01V05StaffNumber );
    getChildrenList().add( _kcp01V05FirstCrIntDate );
    getChildrenList().add( _kcp01V05LastConsDate );
    getChildrenList().add( _kcp01V05BranchShortName );
    getChildrenList().add( _kcp01V05Birthdate );
    getChildrenList().add( _kcp01V05Birthdate2 );
    getChildrenList().add( _kcp01V05NationalInsuranNo1 );
    getChildrenList().add( _kcp01V05NationalInsuranNo2 );
    getChildrenList().add( _kcp01V05CloseAccountBal );
    getChildrenList().add( _kcp01V05ExpManInd );
    getChildrenList().add( _kcp01V05SensAccInd );
    getChildrenList().add( _kcp01V05ChosenName );
    getChildrenList().add( _kcp01V05PooledOffsetInd );
    getChildrenList().add( _kcp01V05PooledBal );

    if( _log.isDebugEnabled() )
      {
      _log.debug( "Initializing successful" );
      }
    }

  /** {@inheritDoc} */
  public void createValueObject() throws HostException
    {
        /* Since this complex binding has a constructor that takes a
         * Value object, we might already have a Value object that
         * was not used yet. */
    if( mUnusedValueObject && mValueObject != null )
      {
      mUnusedValueObject = false;
      return;
      }
    mValueObject = mValueObjectFactory.createKcp01V05BankAccountData();
    }

  /** {@inheritDoc} */
  public void setChildrenValues() throws HostException
    {

         /* Make sure there is an associated Value object*/
    if( mValueObject == null )
      {
      createValueObject();
      }
        /* Get Value object property _kcp01V05Sname */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05Sname"
        + " value=" + mValueObject.getKcp01V05Sname() );
      }
    _kcp01V05Sname.setObjectValue( mValueObject.getKcp01V05Sname() );
        /* Get Value object property _kcp01V05Busclass */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05Busclass"
        + " value=" + mValueObject.getKcp01V05Busclass() );
      }
    _kcp01V05Busclass.setObjectValue( mValueObject.getKcp01V05Busclass() );
        /* Get Value object property _kcp01V05Satind */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05Satind"
        + " value=" + mValueObject.getKcp01V05Satind() );
      }
    _kcp01V05Satind.setObjectValue( mValueObject.getKcp01V05Satind() );
        /* Get Value object property _kcp01V05ProductId */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05ProductId"
        + " value=" + mValueObject.getKcp01V05ProductId() );
      }
    _kcp01V05ProductId.setObjectValue( mValueObject.getKcp01V05ProductId() );
        /* Get Value object property _kcp01V05Genname */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05Genname"
        + " value=" + mValueObject.getKcp01V05Genname() );
      }
    _kcp01V05Genname.setObjectValue( mValueObject.getKcp01V05Genname() );
        /* Get Value object property _kcp01V05Actname */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05Actname"
        + " value=" + mValueObject.getKcp01V05Actname() );
      }
    _kcp01V05Actname.setObjectValue( mValueObject.getKcp01V05Actname() );
        /* Get Value object property _kcp01V05Chtname */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05Chtname"
        + " value=" + mValueObject.getKcp01V05Chtname() );
      }
    _kcp01V05Chtname.setObjectValue( mValueObject.getKcp01V05Chtname() );
        /* Get Value object property _kcp01V05SnameCode */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05SnameCode"
        + " value=" + mValueObject.getKcp01V05SnameCode() );
      }
    _kcp01V05SnameCode.setObjectValue( mValueObject.getKcp01V05SnameCode() );
        /* Get Value object property _kcp01V05CorpDiv */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05CorpDiv"
        + " value=" + mValueObject.getKcp01V05CorpDiv() );
      }
    _kcp01V05CorpDiv.setObjectValue( mValueObject.getKcp01V05CorpDiv() );
        /* Get Value object property _kcp01V05ApplicationScore */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05ApplicationScore"
        + " value=" + mValueObject.getKcp01V05ApplicationScore() );
      }
    _kcp01V05ApplicationScore.setObjectValue( mValueObject.getKcp01V05ApplicationScore() );
        /* Get Value object property _kcp01V05InsOnDate */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05InsOnDate"
        + " value=" + mValueObject.getKcp01V05InsOnDate() );
      }
    _kcp01V05InsOnDate.setObjectValue( mValueObject.getKcp01V05InsOnDate() );
        /* Get Value object property _kcp01V05InsChgDate */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05InsChgDate"
        + " value=" + mValueObject.getKcp01V05InsChgDate() );
      }
    _kcp01V05InsChgDate.setObjectValue( mValueObject.getKcp01V05InsChgDate() );
        /* Get Value object property _kcp01V05FxdTermStartDate */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05FxdTermStartDate"
        + " value=" + mValueObject.getKcp01V05FxdTermStartDate() );
      }
    _kcp01V05FxdTermStartDate.setObjectValue( mValueObject.getKcp01V05FxdTermStartDate() );
        /* Get Value object property _kcp01V05FxdTermEndDate */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05FxdTermEndDate"
        + " value=" + mValueObject.getKcp01V05FxdTermEndDate() );
      }
    _kcp01V05FxdTermEndDate.setObjectValue( mValueObject.getKcp01V05FxdTermEndDate() );
        /* Get Value object property _kcp01V05StudOff */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05StudOff"
        + " value=" + mValueObject.getKcp01V05StudOff() );
      }
    _kcp01V05StudOff.setObjectValue( mValueObject.getKcp01V05StudOff() );
        /* Get Value object property _kcp01V05BcrNpfInd */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05BcrNpfInd"
        + " value=" + mValueObject.getKcp01V05BcrNpfInd() );
      }
    _kcp01V05BcrNpfInd.setObjectValue( mValueObject.getKcp01V05BcrNpfInd() );
        /* Get Value object property _kcp01V05AlwaysRep */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05AlwaysRep"
        + " value=" + mValueObject.getKcp01V05AlwaysRep() );
      }
    _kcp01V05AlwaysRep.setObjectValue( mValueObject.getKcp01V05AlwaysRep() );
        /* Get Value object property _kcp01V05ActualRenDate */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05ActualRenDate"
        + " value=" + mValueObject.getKcp01V05ActualRenDate() );
      }
    _kcp01V05ActualRenDate.setObjectValue( mValueObject.getKcp01V05ActualRenDate() );
        /* Get Value object property _kcp01V05RenewDate */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05RenewDate"
        + " value=" + mValueObject.getKcp01V05RenewDate() );
      }
    _kcp01V05RenewDate.setObjectValue( mValueObject.getKcp01V05RenewDate() );
        /* Get Value object property _kcp01V05Excess */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05Excess"
        + " value=" + mValueObject.getKcp01V05Excess() );
      }
    _kcp01V05Excess.setObjectValue( mValueObject.getKcp01V05Excess() );
        /* Get Value object property _kcp01V05MthlyDaysExcess */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05MthlyDaysExcess"
        + " value=" + mValueObject.getKcp01V05MthlyDaysExcess() );
      }
    _kcp01V05MthlyDaysExcess.setObjectValue( mValueObject.getKcp01V05MthlyDaysExcess() );
        /* Get Value object property _filler42 */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_filler42"
        + " value=" + mValueObject.getFiller42() );
      }
    _filler42.setObjectValue( mValueObject.getFiller42() );
        /* Get Value object property _kcp01V05SameDayEnt */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05SameDayEnt"
        + " value=" + mValueObject.getKcp01V05SameDayEnt() );
      }
    _kcp01V05SameDayEnt.setObjectValue( mValueObject.getKcp01V05SameDayEnt() );
        /* Get Value object property _kcp01V05LstDrDate */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05LstDrDate"
        + " value=" + mValueObject.getKcp01V05LstDrDate() );
      }
    _kcp01V05LstDrDate.setObjectValue( mValueObject.getKcp01V05LstDrDate() );
        /* Get Value object property _kcp01V05LstCrDate */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05LstCrDate"
        + " value=" + mValueObject.getKcp01V05LstCrDate() );
      }
    _kcp01V05LstCrDate.setObjectValue( mValueObject.getKcp01V05LstCrDate() );
        /* Get Value object property _kcp01V05StatsToGrp */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05StatsToGrp"
        + " value=" + mValueObject.getKcp01V05StatsToGrp() );
      }
    _kcp01V05StatsToGrp.setObjectValue( mValueObject.getKcp01V05StatsToGrp() );
        /* Get Value object property _kcp01V05BicIndclass */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05BicIndclass"
        + " value=" + mValueObject.getKcp01V05BicIndclass() );
      }
    _kcp01V05BicIndclass.setObjectValue( mValueObject.getKcp01V05BicIndclass() );
        /* Get Value object property _kcp01V05StaffNumber */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05StaffNumber"
        + " value=" + mValueObject.getKcp01V05StaffNumber() );
      }
    _kcp01V05StaffNumber.setObjectValue( mValueObject.getKcp01V05StaffNumber() );
        /* Get Value object property _kcp01V05FirstCrIntDate */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05FirstCrIntDate"
        + " value=" + mValueObject.getKcp01V05FirstCrIntDate() );
      }
    _kcp01V05FirstCrIntDate.setObjectValue( mValueObject.getKcp01V05FirstCrIntDate() );
        /* Get Value object property _kcp01V05LastConsDate */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05LastConsDate"
        + " value=" + mValueObject.getKcp01V05LastConsDate() );
      }
    _kcp01V05LastConsDate.setObjectValue( mValueObject.getKcp01V05LastConsDate() );
        /* Get Value object property _kcp01V05BranchShortName */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05BranchShortName"
        + " value=" + mValueObject.getKcp01V05BranchShortName() );
      }
    _kcp01V05BranchShortName.setObjectValue( mValueObject.getKcp01V05BranchShortName() );
        /* Get Value object property _kcp01V05Birthdate */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05Birthdate"
        + " value=" + mValueObject.getKcp01V05Birthdate() );
      }
    _kcp01V05Birthdate.setObjectValue( mValueObject.getKcp01V05Birthdate() );
        /* Get Value object property _kcp01V05Birthdate2 */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05Birthdate2"
        + " value=" + mValueObject.getKcp01V05Birthdate2() );
      }
    _kcp01V05Birthdate2.setObjectValue( mValueObject.getKcp01V05Birthdate2() );
        /* Get Value object property _kcp01V05NationalInsuranNo1 */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05NationalInsuranNo1"
        + " value=" + mValueObject.getKcp01V05NationalInsuranNo1() );
      }
    _kcp01V05NationalInsuranNo1.setObjectValue( mValueObject.getKcp01V05NationalInsuranNo1() );
        /* Get Value object property _kcp01V05NationalInsuranNo2 */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05NationalInsuranNo2"
        + " value=" + mValueObject.getKcp01V05NationalInsuranNo2() );
      }
    _kcp01V05NationalInsuranNo2.setObjectValue( mValueObject.getKcp01V05NationalInsuranNo2() );
        /* Get Value object property _kcp01V05CloseAccountBal */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05CloseAccountBal"
        + " value=" + mValueObject.getKcp01V05CloseAccountBal() );
      }
    _kcp01V05CloseAccountBal.setObjectValue( mValueObject.getKcp01V05CloseAccountBal() );
        /* Get Value object property _kcp01V05ExpManInd */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05ExpManInd"
        + " value=" + mValueObject.getKcp01V05ExpManInd() );
      }
    _kcp01V05ExpManInd.setObjectValue( mValueObject.getKcp01V05ExpManInd() );
        /* Get Value object property _kcp01V05SensAccInd */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05SensAccInd"
        + " value=" + mValueObject.getKcp01V05SensAccInd() );
      }
    _kcp01V05SensAccInd.setObjectValue( mValueObject.getKcp01V05SensAccInd() );
        /* Get Value object property _kcp01V05ChosenName */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05ChosenName"
        + " value=" + mValueObject.getKcp01V05ChosenName() );
      }
    _kcp01V05ChosenName.setObjectValue( mValueObject.getKcp01V05ChosenName() );
        /* Get Value object property _kcp01V05PooledOffsetInd */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05PooledOffsetInd"
        + " value=" + mValueObject.getKcp01V05PooledOffsetInd() );
      }
    _kcp01V05PooledOffsetInd.setObjectValue( mValueObject.getKcp01V05PooledOffsetInd() );
        /* Get Value object property _kcp01V05PooledBal */
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Getting value from Value object property "
        + "_kcp01V05PooledBal"
        + " value=" + mValueObject.getKcp01V05PooledBal() );
      }
    _kcp01V05PooledBal.setObjectValue( mValueObject.getKcp01V05PooledBal() );
    }

  /** {@inheritDoc} */
  public void setPropertyValue( final int index ) throws HostException
    {

    ICobolBinding child = getChildrenList().get( index );

       /* Children that are not bound to a value object are ignored.
        * This includes Choices and dynamically generated counters
        * for instance.  */
    if( !child.isBound() )
      {
      return;
      }

        /* Set the Value object property value from binding object */
    Object bindingValue = null;
    switch( index )
      {
      case 0:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05Sname( (String) bindingValue );
        break;
      case 1:
        bindingValue = child.getObjectValue( Short.class );
        mValueObject.setKcp01V05Busclass( (Short) bindingValue );
        break;
      case 2:
        bindingValue = child.getObjectValue( Short.class );
        mValueObject.setKcp01V05Satind( (Short) bindingValue );
        break;
      case 3:
        bindingValue = child.getObjectValue( Integer.class );
        mValueObject.setKcp01V05ProductId( (Integer) bindingValue );
        break;
      case 4:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05Genname( (String) bindingValue );
        break;
      case 5:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05Actname( (String) bindingValue );
        break;
      case 6:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05Chtname( (String) bindingValue );
        break;
      case 7:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05SnameCode( (String) bindingValue );
        break;
      case 8:
        bindingValue = child.getObjectValue( Short.class );
        mValueObject.setKcp01V05CorpDiv( (Short) bindingValue );
        break;
      case 9:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05ApplicationScore( (String) bindingValue );
        break;
      case 10:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05InsOnDate( (String) bindingValue );
        break;
      case 11:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05InsChgDate( (String) bindingValue );
        break;
      case 12:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05FxdTermStartDate( (String) bindingValue );
        break;
      case 13:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05FxdTermEndDate( (String) bindingValue );
        break;
      case 14:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05StudOff( (String) bindingValue );
        break;
      case 15:
        bindingValue = child.getObjectValue( Short.class );
        mValueObject.setKcp01V05BcrNpfInd( (Short) bindingValue );
        break;
      case 16:
        bindingValue = child.getObjectValue( Short.class );
        mValueObject.setKcp01V05AlwaysRep( (Short) bindingValue );
        break;
      case 17:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05ActualRenDate( (String) bindingValue );
        break;
      case 18:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05RenewDate( (String) bindingValue );
        break;
      case 19:
        bindingValue = child.getObjectValue( Short.class );
        mValueObject.setKcp01V05Excess( (Short) bindingValue );
        break;
      case 20:
        bindingValue = child.getObjectValue( Short.class );
        mValueObject.setKcp01V05MthlyDaysExcess( (Short) bindingValue );
        break;
      case 21:
        bindingValue = child.getObjectValue( String.class );
        List<String> listFiller42 = cast( bindingValue );
        mValueObject.getFiller42().clear();
        mValueObject.getFiller42().addAll( listFiller42 );
        break;
      case 22:
        bindingValue = child.getObjectValue( Long.class );
        mValueObject.setKcp01V05SameDayEnt( (Long) bindingValue );
        break;
      case 23:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05LstDrDate( (String) bindingValue );
        break;
      case 24:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05LstCrDate( (String) bindingValue );
        break;
      case 25:
        bindingValue = child.getObjectValue( Short.class );
        mValueObject.setKcp01V05StatsToGrp( (Short) bindingValue );
        break;
      case 26:
        bindingValue = child.getObjectValue( Integer.class );
        mValueObject.setKcp01V05BicIndclass( (Integer) bindingValue );
        break;
      case 27:
        bindingValue = child.getObjectValue( Integer.class );
        mValueObject.setKcp01V05StaffNumber( (Integer) bindingValue );
        break;
      case 28:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05FirstCrIntDate( (String) bindingValue );
        break;
      case 29:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05LastConsDate( (String) bindingValue );
        break;
      case 30:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05BranchShortName( (String) bindingValue );
        break;
      case 31:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05Birthdate( (String) bindingValue );
        break;
      case 32:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05Birthdate2( (String) bindingValue );
        break;
      case 33:
        bindingValue = child.getObjectValue( Kcp01V05NationalInsuranNo1.class );
        mValueObject.setKcp01V05NationalInsuranNo1( (Kcp01V05NationalInsuranNo1) bindingValue );
        break;
      case 34:
        bindingValue = child.getObjectValue( Kcp01V05NationalInsuranNo2.class );
        mValueObject.setKcp01V05NationalInsuranNo2( (Kcp01V05NationalInsuranNo2) bindingValue );
        break;
      case 35:
        bindingValue = child.getObjectValue( BigDecimal.class );
        mValueObject.setKcp01V05CloseAccountBal( (BigDecimal) bindingValue );
        break;
      case 36:
        bindingValue = child.getObjectValue( Short.class );
        mValueObject.setKcp01V05ExpManInd( (Short) bindingValue );
        break;
      case 37:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05SensAccInd( (String) bindingValue );
        break;
      case 38:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05ChosenName( (String) bindingValue );
        break;
      case 39:
        bindingValue = child.getObjectValue( String.class );
        mValueObject.setKcp01V05PooledOffsetInd( (String) bindingValue );
        break;
      case 40:
        bindingValue = child.getObjectValue( BigDecimal.class );
        mValueObject.setKcp01V05PooledBal( (BigDecimal) bindingValue );
        break;
      default:
        break;
      }
    if( _log.isDebugEnabled() )
      {
      _log.debug( "Setting value of Value object property "
        + child.getJaxbName()
        + " value=" + bindingValue );
      }
    }

  /** {@inheritDoc} */
  public Object getObjectValue(
    final Class<?> type ) throws HostException
    {
    if( type.equals( Kcp01V05BankAccountData.class ) )
      {
      return mValueObject;
      }
    else
      {
      throw new HostException( "Attempt to get binding " + getBindingName()
        + " as an incompatible type " + type );
      }
    }

  /** {@inheritDoc} */
  public void setObjectValue(
    final Object bindingValue ) throws HostException
    {
    if( bindingValue == null )
      {
      mValueObject = null;
      return;
      }
    if( bindingValue.getClass().equals( Kcp01V05BankAccountData.class ) )
      {
      mValueObject = (Kcp01V05BankAccountData) bindingValue;
      }
    else
      {
      throw new HostException( "Attempt to set binding " + getBindingName()
        + " from an incompatible value " + bindingValue );
      }
    }

  /**
   * @return the java object factory for objects creation
   */
  public ObjectFactory getObjectFactory()
    {
    return mValueObjectFactory;
    }

  /**
   * @param valueObjectFactory the java object factory for objects creation
   */
  public void setObjectFactory( final Object valueObjectFactory )
    {
    mValueObjectFactory = (ObjectFactory) valueObjectFactory;
    }

  /** {@inheritDoc} */
  public boolean isSet()
    {
    return ( mValueObject != null );
    }

  /**
   * @return the bound Value object
   */
  public Kcp01V05BankAccountData getKcp01V05BankAccountData()
    {
    return mValueObject;
    }

  /**
   * The COBOL complex element maximum length in bytes.
   *
   * @return COBOL complex element maximum length in bytes
   */
  public int getByteLength()
    {
    return BYTE_LENGTH;
    }
  }

